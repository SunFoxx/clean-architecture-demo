// Mocks generated by Mockito 5.0.16 from annotations
// in jimmy_test/test/features/manufacturers/domain/usecases/load_manufacturers_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:jimmy_test/core/entities/result.dart' as _i2;
import 'package:jimmy_test/features/manufacturers/domain/entities/manufacturer.dart'
    as _i5;
import 'package:jimmy_test/features/manufacturers/domain/repositories/manufacturers_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResult_0<A, B extends Exception> extends _i1.Fake
    implements _i2.Result<A, B> {}

/// A class which mocks [ManufacturersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockManufacturersRepository extends _i1.Mock
    implements _i3.ManufacturersRepository {
  MockManufacturersRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i5.Manufacturer>, Exception>> fetchManufacturers(
          int? page) =>
      (super.noSuchMethod(Invocation.method(#fetchManufacturers, [page]),
              returnValue:
                  Future<_i2.Result<List<_i5.Manufacturer>, Exception>>.value(
                      _FakeResult_0<List<_i5.Manufacturer>, Exception>()))
          as _i4.Future<_i2.Result<List<_i5.Manufacturer>, Exception>>);
  @override
  String toString() => super.toString();
}
